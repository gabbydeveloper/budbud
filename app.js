/*
 * File: app.js
 *
 * This file was generated by Sencha Architect version 4.2.9.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 7.3.x Classic library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 7.3.x Classic. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

// @require @packageOverrides
Ext.Loader.setConfig({

});


Ext.application({
  models: [
    'categoriasModel',
    'usuarioModel'
  ],
  stores: [
    'menuStore',
    'categoriasStore',
    'loginStore'
  ],
  views: [
    'vpMain',
    'winLogin',
    'pnlVistaGeneral',
    'pnlTendencias',
    'pnlDetalleIngresos',
    'pnlDetalleGastos',
    'pnlDetallePresupuesto',
    'pnlComparacion',
    'pnlDetalleMetas',
    'pnlProgreso',
    'pnlCategorias',
    'winCategorias'
  ],
  name: 'Bud',

  launch: function() {
    const url = window.location.href;
    let env = '';
    CONFIG = null;

    if(url.indexOf('localhost') !== -1)
      env = 'dev';
    else
    {
      if(url.indexOf('test') !== -1)
        env = 'test';
      else
        env = 'prod';
    }

    if(env !== '')
    {
      Ext.Ajax.request({
        url: 'assets/json/config.' + env + '.json',
        success: function(response)
        {
          CONFIG = Ext.decode(response.responseText);
          const storage = Ext.util.LocalStorage.get('main');
          let token = storage.getItem('token');
          const main = Ext.getCmp('vpMain');

          if(token === null)
          {
            IDUSER = null;
            if(typeof(main) !== 'undefined')
              main.destroy();
            Ext.create('Bud.view.winLogin');
          }
          else
          {
            const user = CONFIG.user;
            const pass = CONFIG.pass;
            const base64Credentials = btoa(user+':'+pass);
            Ext.Ajax.request
            (
              {
                url: CONFIG.apiUrl + 'userbud',
                method: 'GET',
                params: {
                  tkn: token
                },
                headers: {
                  'Authorization': 'Basic ' + base64Credentials
                },
                callback: function(obj, success, response)
                {
                  if(success)
                  {
                    let res = Ext.JSON.decode(response.responseText);
                    IDUSER = res.id_usuario;
                    Ext.create('Bud.view.vpMain');
                  }
                  else
                  {
                    if(typeof(main) !== 'undefined')
                      main.destroy();
                    Ext.create('Bud.view.winLogin');
                  }
                }
              }
            );
          }
        },
        failure: function() {
          Ext.Msg.alert('Error', 'No se pudo cargar el archivo de configuraci√≥n.');
        }
      });
    }
  }

});
