{
    "type": "class",
    "reference": {
        "name": "items",
        "type": "array"
    },
    "codeClass": null,
    "userConfig": {
        "designer|userClassName": "Funciones",
        "singleton": true
    },
    "configAlternates": {
        "designer|userClassName": "string",
        "singleton": "boolean"
    },
    "name": "MyClass",
    "designerId": "eabac001-0054-4777-998b-66ed76aecf72",
    "cn": [
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "tipo",
                    "mensaje"
                ],
                "fn": "showMessg",
                "implHandler": [
                    "var titulo = '', task = null;",
                    "switch(tipo)",
                    "{",
                    "  case 'INFO':",
                    "    {",
                    "      Ext.toast",
                    "      (",
                    "        {",
                    "          html: mensaje,",
                    "          closable: false,",
                    "          align: 't',",
                    "          slideDUration: 200,",
                    "          maxWidth: 400",
                    "        }",
                    "      );",
                    "      break;",
                    "    }",
                    "  case 'WARNING':",
                    "    {",
                    "      task = new Ext.util.DelayedTask(function(){",
                    "        titulo = 'Alerta';",
                    "        Ext.Msg.show",
                    "        (",
                    "          {",
                    "            title: titulo,",
                    "            msg: mensaje,",
                    "            icon: Ext.Msg.WARNING,",
                    "            buttons: Ext.Msg.OK",
                    "          }",
                    "        );",
                    "      });",
                    "      task.delay(100);",
                    "      break;",
                    "    }",
                    "  case 'ERROR':",
                    "    {",
                    "      task = new Ext.util.DelayedTask(function(){",
                    "        titulo = 'Error';",
                    "        Ext.Msg.show",
                    "        (",
                    "          {",
                    "            title: titulo,",
                    "            msg: mensaje,",
                    "            icon: Ext.Msg.ERROR,",
                    "            buttons: Ext.Msg.OK",
                    "          }",
                    "        );",
                    "      });",
                    "      task.delay(100);",
                    "      break;",
                    "    }",
                    "}"
                ]
            },
            "configAlternates": {
                "designer|params": "typedarray",
                "fn": "string",
                "implHandler": "code"
            },
            "name": "showMessg",
            "designerId": "c76c820c-cee6-4d97-8b57-936af93d077d"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "obj"
                ],
                "fn": "openPanel",
                "implHandler": [
                    "if(obj !== 'exit')",
                    "{",
                    "  let object = Ext.getCmp(obj);",
                    "  let central = Ext.getCmp('cntCentral');",
                    "  if(!object)",
                    "  {",
                    "    central.removeAll();",
                    "    panel = Ext.create('Bud.view.' + obj);",
                    "    central.add(panel);",
                    "    panel.show();",
                    "  }",
                    "}",
                    "else",
                    "  this.exitApp();"
                ]
            },
            "configAlternates": {
                "designer|params": "typedarray",
                "fn": "string",
                "implHandler": "code"
            },
            "name": "openPanel",
            "designerId": "eaf4d9ae-41ef-43ac-8573-62ff9f56f399"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "name",
                    "endPoint",
                    "extraParams",
                    "idGrid"
                ],
                "fn": "loadStore",
                "implHandler": [
                    "const store = Ext.data.StoreManager.lookup(name);",
                    "const baseUrl = CONFIG.apiUrl + endPoint;",
                    "const user = CONFIG.user;",
                    "const pass = CONFIG.pass;",
                    "const base64Credentials = btoa(user+':'+pass);",
                    "const me = this;",
                    "let params = {usuario: IDUSER};",
                    "",
                    "store.proxy.setConfig('url', baseUrl);",
                    "store.proxy.setConfig('headers', {",
                    "  'Authorization': 'Basic ' + base64Credentials",
                    "});",
                    "",
                    "if(extraParams)",
                    "{",
                    "  for (let key in extraParams) {",
                    "    if (extraParams.hasOwnProperty(key)) {",
                    "      params[key] = extraParams[key];",
                    "    }",
                    "  }",
                    "}",
                    "",
                    "store.proxy.extraParams = params;",
                    "",
                    "store.load({",
                    "  callback: function(records, operation, success){",
                    "    if(success){",
                    "      const grid = Ext.getCmp(idGrid);",
                    "      if(typeof(grid) !== 'undefined'){",
                    "        const etiqueta = grid.down('toolbar[dock=\"bottom\"]').down('#showItemNumbers');",
                    "        etiqueta.setValue(records.length + ' ítems');",
                    "      }",
                    "    }",
                    "    else{",
                    "      me.showMessg('ERROR', 'Ha ocurrido un error');",
                    "    }",
                    "  }",
                    "});"
                ]
            },
            "configAlternates": {
                "designer|params": "typedarray",
                "fn": "string",
                "implHandler": "code"
            },
            "name": "loadStore",
            "designerId": "8a0485c1-0f3e-4f33-ba43-8b89c0f8b869"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "exitApp",
                "implHandler": [
                    "const storage = Ext.util.LocalStorage.get('main');",
                    "storage.clear();",
                    "",
                    "Ext.create('Bud.view.winLogin');",
                    "Ext.getCmp('vpMain').destroy();"
                ]
            },
            "configAlternates": {
                "fn": "string",
                "implHandler": "code"
            },
            "name": "exitApp",
            "designerId": "f10757a7-8b6e-41c6-836b-0c2113954cfe"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "idWin",
                    "aliasWin",
                    "params"
                ],
                "fn": "showWin",
                "implHandler": [
                    "var win = Ext.getCmp(idWin);",
                    "if (win === null || typeof(win) === 'undefined')",
                    "  win = Ext.create(aliasWin);",
                    "",
                    "//Poner parámetros en la ventana para casos especiales",
                    "if(params !== '' && params !== null && typeof(params) !== 'undefined')",
                    "{",
                    "  Object.getOwnPropertyNames(params).forEach(function(val, idx, array){",
                    "    win[val] = params[val];",
                    "  });",
                    "}",
                    "",
                    "Ext.getCmp('cntCentral').add(win);",
                    "win.show();"
                ]
            },
            "configAlternates": {
                "designer|params": "typedarray",
                "fn": "string",
                "implHandler": "code"
            },
            "name": "showWin",
            "designerId": "2fff5ad2-3bb1-4b48-bbb2-40ca70e7ba04"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "idForma",
                    "data",
                    "idGridRefresca"
                ],
                "fn": "saveForm",
                "implHandler": [
                    "const user = CONFIG.user;",
                    "const pass = CONFIG.pass;",
                    "const base64Credentials = btoa(user+':'+pass);",
                    "const forma = Ext.getCmp(idForma).getForm();",
                    "const me = this;",
                    "if(forma.isValid())",
                    "  Ext.Ajax.request",
                    "  (",
                    "    {",
                    "      url: CONFIG.apiUrl + 'saveform',",
                    "      method: 'POST',",
                    "      params: {",
                    "        usuario: IDUSER,",
                    "        idForma: idForma,",
                    "        data: Ext.JSON.encode(data)",
                    "      },",
                    "      headers: {",
                    "        'Authorization': 'Basic ' + base64Credentials",
                    "      },",
                    "      callback: function(obj, success, response)",
                    "      {",
                    "        let res = Ext.JSON.decode(response.responseText);",
                    "        if(success)",
                    "        {",
                    "          Ext.getCmp(idGridRefresca).getStore().load();",
                    "        }",
                    "        else",
                    "        {",
                    "          const error = 'Ha ocurrido un error';",
                    "          me.showMessg('ERROR', error);",
                    "        }",
                    "      }",
                    "    }",
                    "  );"
                ]
            },
            "configAlternates": {
                "designer|params": "typedarray",
                "fn": "string",
                "implHandler": "code"
            },
            "name": "saveForm",
            "designerId": "c4c39d35-963a-435b-90ce-6dd1ac258d4e"
        }
    ]
}